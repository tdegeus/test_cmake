language: cpp
sudo: require

matrix:

  include:
    - os: linux
      dist: trusty
      env:
        - GCC_VERSION=4.9
      addons:
        apt:
          packages:
            - g++-4.9
            - cmake
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      dist: xenial
      env:
        - GCC_VERSION=7
      addons:
        apt:
          packages:
            - g++-7
            - cmake
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      dist: xenial
      env:
        - CLANG_VERSION=6.0
      addons:
        apt:
          packages:
            - clang-6.0
            - cmake
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0

    - os: linux
      dist: xenial
      env:
        - CLANG_VERSION=7
      addons:
        apt:
          packages:
            - clang-7
            - cmake
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7

    - os: osx
      osx_image: xcode10.3
      env:

env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"

before_script:
  # Define the version of miniconda to download
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      MINCONDA_OS=$MINCONDA_LINUX;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      MINCONDA_OS=$MINCONDA_OSX;
    fi
  - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install -c conda-forge make
  - conda install -c conda-forge cmake==3.5.0
  # Define C++ compiler & print info
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CXX="clang++" CC="clang"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - cmake --version

script:
  - cmake .
  - sudo make install
  - cd project
  - cmake .
  - make
  - ./myexec

